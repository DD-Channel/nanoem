version: 2
jobs:
  build:
    docker:
      - image: hkrn/nanoem-build:20200811
    working_directory: /build/nanoem
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run: git https://github.com/ffmpeg/ffmpeg.git dependencies/ffmpeg || /bin/true
      - run: |
          CC="clang-6.0" \
          CXX="clang++-6.0" \
          DEPS_PATH=$PWD/build/dependencies \
          FX9_BUILD_DEPENDENCIES_DIRECTORY=$DEPS_PATH \
          NANOEM_BUILD_DEPENDENCIES_DIRECTORY=$DEPS_PATH \
          NANOEM_TARGET_ARCHITECTURES="x86_64" \
          NANOEM_TARGET_CONFIGURATIONS="debug;release" \
          NANOEM_TARGET_COMPILER="clang" \
          NANOEM_DISABLE_BUILD_SPIRV_TOOLS="1" \
          NANOEM_DISABLE_BUILD_SENTRY_NATIVE="1" \
          cmake -DCONFIG=release -P $PWD/scripts/build.cmake
      - run: |
          export DEPS_PATH=$PWD/build/dependencies
          mkdir -p $PWD/build/core
          cd $PWD/build/core
          CC="clang-6.0" \
          CXX="clang++-6.0" \
          FX9_BUILD_DEPENDENCIES_DIRECTORY=$DEPS_PATH \
          NANOEM_BUILD_DEPENDENCIES_DIRECTORY=$DEPS_PATH \
          cmake \
            -DCMAKE_INSTALL_PREFIX=$PWD/install-root \
            -DCPACK_PACKAGING_INSTALL_PREFIX=$CIRCLE_ARTIFACTS \
            -DFX9_ENABLE_OPTIMIZER=OFF \
            -DNANOEM_ENABLE_BULLET=ON \
            -DNANOEM_ENABLE_GLFW=ON \
            -DNANOEM_ENABLE_ICU=ON \
            -DNANOEM_ENABLE_NMD=ON \
            -DNANOEM_ENABLE_SHADER_OPTIMIZED=OFF \
            -DNANOEM_ENABLE_UPDATE_CREDITS=ON \
            -DNANOEM_ENABLE_TEST=ON \
            -DNANOEM_INSTALL_EFFECT_PLUGIN=ON \
            -DNANOEM_INSTALL_FFMPEG_PLUGIN=ON \
            -DNANOEM_INSTALL_GIF_PLUGIN=OFF \
            -DNANOEM_INSTALL_LSMASH_PLUGIN=ON \
            -DNANOEM_INSTALL_MODEL_PLUGIN=ON \
            -DNANOEM_INSTALL_MOTION_PLUGIN=ON \
            -DNANOEM_INSTALL_ZIP_PLUGIN=OFF \
            -DNANOEM_TARGET_ARCHITECTURE=x86_64 \
            -DNANOEM_TARGET_COMPILER=clang \
            -GNinja \
            ../..
          cmake --build . --config release
      - run: |
          cd $PWD/build/core
          cmake --build . --target test
